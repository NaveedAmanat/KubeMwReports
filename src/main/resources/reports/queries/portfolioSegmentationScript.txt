WITH
    qry
    AS
        (SELECT case when :role_type = 'bm' then emp.emp_nm when :brnchSeq <> -1 then emp.emp_nm  else mb.brnch_nm end emp_nm,
                grp.PRD_GRP_NM,
                ap.PRD_SEQ,
                ap.LOAN_CYCL_NUM,
                (CASE
                     WHEN ap.APRVD_LOAN_AMT BETWEEN 0 AND 20000 THEN '1.Amt--- Upto 20,000'
                     WHEN ap.APRVD_LOAN_AMT BETWEEN 20001 AND 30000 THEN '2.Amtbtw 20,001 to 30,000'
                     WHEN ap.APRVD_LOAN_AMT BETWEEN 30001 AND 50000 THEN '3.Amtbtw 30,001 to 50,000'
                     WHEN ap.APRVD_LOAN_AMT BETWEEN 50001 AND 70000 THEN '4.Amtbtw 50,001 to 70,000'
                     WHEN ap.APRVD_LOAN_AMT BETWEEN 70001 AND 90000 THEN '5.Amtbtw 70,001 to 90,000'
                     WHEN ap.APRVD_LOAN_AMT BETWEEN 90001 AND 100000 THEN '6.Amtbtw 90,001 to 100,000'
                     WHEN ap.APRVD_LOAN_AMT BETWEEN 100001 AND 120000 THEN '7.Amtbtw 100,001 to 120,000'
                     ELSE '8.Amt--- Over 120,000'
                 END)
                    AMT_RNG,
                CASE
                    WHEN ap.PRD_SEQ IN (4,
                                        10,
                                        33,
                                        34)
                    THEN
                        NVL (
                            (SELECT sect.BIZ_SECT_NM
                               FROM mw_biz_aprsl mba, mw_biz_acty acty, mw_biz_sect sect
                              WHERE     mba.LOAN_APP_SEQ = ap.loan_app_seq
                                    AND acty.BIZ_ACTY_SEQ = mba.ACTY_KEY
                                    AND acty.BIZ_SECT_SEQ = sect.BIZ_SECT_SEQ
                                    AND mba.CRNT_REC_FLG = 1),
                            'No sector available.')
                    ELSE
                        NULL
                END
                    sect,
                CASE
                    WHEN cl.slf_pdc_flg = 1 THEN 'Self_PDC'
                    WHEN cl.co_bwr_san_flg = 1 THEN 'Nominee_PDC'
                    ELSE 'Third_Party_PDC'
                END
                    pdc_hldr,
                ap.loan_app_seq
                    loan_cnt,
                ap.APRVD_LOAN_AMT
                    APRVD_LOAN_AMT,
                loan_app_ost (ap.loan_app_seq, TO_DATE ( :todt, 'dd-MM-yyyy'), 'psc')
                    ost_amt
           FROM mw_loan_app        ap
                JOIN mw_clnt cl ON cl.clnt_seq = ap.clnt_seq AND cl.crnt_rec_flg = 1
                JOIN mw_prd prd ON ap.PRD_SEQ = prd.PRD_SEQ AND prd.CRNT_REC_FLG = 1
                JOIN mw_prd_grp grp ON grp.PRD_GRP_SEQ = prd.PRD_GRP_SEQ AND grp.CRNT_REC_FLG = 1
                JOIN mw_port prt ON prt.port_seq = ap.port_seq AND prt.crnt_rec_flg = 1 
                INNER JOIN mw_brnch mb on mb.BRNCH_SEQ = prt.BRNCH_SEQ and mb.CRNT_REC_FLG = 1
                AND prt.brnch_seq = (CASE WHEN :brnchSeq = -1 THEN prt.brnch_seq ELSE :brnchSeq END)
                JOIN mw_port_emp_rel erl ON erl.port_seq = prt.port_seq AND erl.crnt_rec_flg = 1,
                 mw_emp emp    ,
                mw_dsbmt_vchr_hdr  dvh
          WHERE         
         emp.emp_seq = erl.emp_seq
          and
            (   (ap.loan_app_sts = 703 AND TRUNC (ap.loan_app_sts_dt) <= TO_DATE ( :todt, 'dd-MM-yyyy'))
                     OR (    ap.loan_app_sts = 704
                         AND TRUNC (ap.loan_app_sts_dt) > TO_DATE ( :todt, 'dd-MM-yyyy')
                         AND TRUNC (dvh.dsbmt_dt) <= TO_DATE ( :todt, 'dd-MM-yyyy'))
                     OR (ap.loan_app_sts = 1245 AND TRUNC (ap.loan_app_sts_dt) > TO_DATE ( :todt, 'dd-MM-yyyy')))
                AND dvh.loan_app_seq = ap.loan_app_seq
                AND dvh.crnt_rec_flg = 1
                AND ap.crnt_rec_flg = 1
                AND prt.port_seq IN (SELECT port_seq
                                       FROM mw_acl acl
                                      WHERE acl.user_id = :p_user and acl.user_id is not null)
                --                AND loan_app_ost (ap.loan_app_seq, TO_DATE ( :todt, 'dd-MM-yyyy'), 'psc') > 0
                AND ap.PRD_SEQ NOT IN (2, 5,13, 14)
                AND NOT EXISTS
                        (SELECT ctl.loan_app_seq
                           FROM mw_clnt_tag_list ctl
                          WHERE     ctl.loan_app_seq = ap.loan_app_seq
                                AND TRUNC (ctl.eff_start_dt) <= TO_DATE ( :todt, 'dd-MM-yyyy')
                                AND ctl.tags_seq = 4
                                AND ctl.crnt_rec_flg = 1))
  SELECT 1                        ord,
         sect,
         COUNT (loan_cnt)         loan_cnt,
         SUM (APRVD_LOAN_AMT)     APRVD_LOAN_AMT,
         SUM (ost_amt)            ost_amt
    FROM qry q
   WHERE q.prd_seq IN (4,
                       10,
                       33,
                       34)
 and    ost_amt > 0
GROUP BY q.sect
UNION
  SELECT 2,
         PRD_GRP_NM,
         COUNT (loan_cnt)         loan_cnt,
         SUM (APRVD_LOAN_AMT)     APRVD_LOAN_AMT,
         SUM (ost_amt)            ost_amt
    FROM qry q
    where ost_amt > 0
GROUP BY q.PRD_GRP_NM
UNION
  SELECT 3,
         EMP_NM,
         COUNT (loan_cnt)         loan_cnt,
         SUM (APRVD_LOAN_AMT)     APRVD_LOAN_AMT,
         SUM (ost_amt)            ost_amt
    FROM qry q
    where ost_amt > 0
GROUP BY q.EMP_NM
UNION
  SELECT 4,
         'Loan Cycle - ' || LPAD (TO_CHAR (LOAN_CYCL_NUM), 2, '0'),
         COUNT (loan_cnt)         loan_cnt,
         SUM (APRVD_LOAN_AMT)     APRVD_LOAN_AMT,
         SUM (ost_amt)            ost_amt
    FROM qry q
    where ost_amt > 0
GROUP BY 'Loan Cycle - ' || LPAD (TO_CHAR (LOAN_CYCL_NUM), 2, '0')
UNION
  SELECT 5,
         pdc_hldr,
         COUNT (loan_cnt)         loan_cnt,
         SUM (APRVD_LOAN_AMT)     APRVD_LOAN_AMT,
         SUM (ost_amt)            ost_amt
    FROM qry q
    where ost_amt > 0
	and q.prd_seq not IN (22,29)
GROUP BY q.pdc_hldr
UNION
  SELECT 6,
         AMT_RNG,
         COUNT (loan_cnt)         loan_cnt,
         SUM (APRVD_LOAN_AMT)     APRVD_LOAN_AMT,
         SUM (ost_amt)            ost_amt
    FROM qry q
    where ost_amt > 0
GROUP BY AMT_RNG