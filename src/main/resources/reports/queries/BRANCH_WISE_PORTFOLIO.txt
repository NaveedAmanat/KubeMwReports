SELECT mb.brnch_nm,
       NULL
           AS dist_nm,
       NULL
           AS thsl_nm,
       DECODE (mb.BRNCH_TYP_KEY,
               281, 'URBAN',
               1900, 'DEEP RURAL',
               810, 'SEMI URBAN',
               282, 'RURAL')
           B_TYPE,
       NULL
           AS prov_nm,
       NVL (dsb.dsb_clnts, 0)
           dsb_clnts,
       NVL (dsb.dsb_amt, 0)
           dsb_amt,
       NVL (ost.OST_LOANS, 0)
           OST_LOANS,
       NVL (ost.OST_CLIENTS, 0)
           OST_CLIENTS,
       NVL (ost.OST_AMT, 0)
           OST_AMT,
       NVL (od.OD_CLIENTS, 0)
           OD_CLIENTS,
       NVL (od.OD_AMT, 0)
           OD_AMT
  FROM mw_brnch  mb,
       (  SELECT branch,
                 SUM (OST_CLIENTS)     OST_CLIENTS,
                 SUM (OST_LOANS)       OST_LOANS,
                 SUM (OST_AMT)         OST_AMT
            FROM (  SELECT UPPER (cpm.branch)
                               branch,
                           CASE
                               WHEN CPM.PRODUCT_ID <> 19
                               THEN
                                   COUNT (LOAN_CYCLE_ID)
                           END
                               OST_CLIENTS,
                           COUNT (LOAN_CYCLE_ID)
                               OST_LOANS,
                             ROUND (SUM (NVL (OUTSTANDING_PRINCIPAL, 0)))
                           + ROUND (SUM (NVL (OUTSTANDING_SC, 0)))
                               OST_AMT
                      FROM KASHF_REPORTING.CON_MON_FMTO_TMP CPM
                     WHERE     (   CPM.LOAN_COMPLETION_DATE IS NULL
                                OR CPM.LOAN_COMPLETION_DATE >
                                   TO_DATE ( :to_dt, 'dd-mm-RRRR'))
                           AND (  NVL (OUTSTANDING_PRINCIPAL, 0)
                                + NVL (OUTSTANDING_SC, 0)) >
                               0
                           AND CPM.PRODUCT_ID NOT IN (8)
                           AND TRUNC (cpm.trn_date) =
                               TO_DATE ( :to_dt, 'dd-mm-RRRR')
                  GROUP BY cpm.branch, cpm.product_id)
        GROUP BY branch) ost,
       (  SELECT branch, SUM (dsb_clnts) dsb_clnts, SUM (dsb_amt) dsb_amt
            FROM (  SELECT UPPER (mb.brnch_nm)
                               branch,
                           CASE
                               WHEN lap.prd_seq <> 29
                               THEN
                                   COUNT (lap.loan_app_seq)
                           END
                               dsb_clnts,
                           SUM (lap.aprvd_loan_amt)
                               dsb_amt
                      FROM mw_loan_app lap, mw_dsbmt_vchr_hdr dhdr, mw_brnch mb
                     WHERE     lap.loan_app_seq = dhdr.loan_app_seq
                           AND lap.brnch_seq = mb.brnch_seq
                           AND lap.crnt_rec_flg = 1
                           AND mb.crnt_rec_flg = 1
                           AND dhdr.crnt_rec_flg = 1
                           AND lap.loan_app_seq <> -1
                           AND TRUNC (DHDR.DSBMT_DT) BETWEEN ADD_MONTHS (
                                                                 TO_DATE (
                                                                     :to_dt,
                                                                     'dd-MM-RRRR'),
                                                                 -1)
                                                         AND TO_DATE (
                                                                 :to_dt,
                                                                 'dd-MM-RRRR')
                  GROUP BY mb.brnch_nm, lap.prd_seq)
        GROUP BY branch) dsb,
       (  SELECT branch, SUM (OD_CLIENTS) OD_CLIENTS, SUM (OD_AMT) OD_AMT
            FROM (  SELECT UPPER (cpm.branch)
                               branch,
                           CASE
                               WHEN CPM.PRODUCT_ID <> 19
                               THEN
                                   COUNT (LOAN_CYCLE_ID)
                           END
                               OD_CLIENTS,
                             ROUND (SUM (NVL (OVERDUE_AMOUNT, 0)))
                           + ROUND (SUM (NVL (OVERDUE_AMOUNT_SC, 0)))
                               OD_AMT
                      FROM KASHF_REPORTING.CON_MON_FMTO_TMP CPM
                     WHERE     (   CPM.LOAN_COMPLETION_DATE IS NULL
                                OR CPM.LOAN_COMPLETION_DATE >
                                   TO_DATE ( :to_dt, 'dd-mm-RRRR'))
                           AND (  NVL (OVERDUE_AMOUNT, 0)
                                + NVL (OVERDUE_AMOUNT_SC, 0)) >
                               0
                           AND CPM.PRODUCT_ID NOT IN (8)
                           AND TRUNC (cpm.trn_date) =
                               TO_DATE ( :to_dt, 'dd-mm-RRRR')
                  GROUP BY cpm.branch, CPM.PRODUCT_ID)
        GROUP BY branch) od
 WHERE     mb.brnch_nm = ost.branch(+)
       AND mb.brnch_nm = dsb.branch(+)
       AND mb.brnch_nm = OD.branch(+)
       AND   NVL (dsb.dsb_clnts, 0)
           + NVL (dsb.dsb_amt, 0)
           + NVL (ost.OST_CLIENTS, 0)
           + NVL (ost.OST_AMT, 0)
           + NVL (od.OD_CLIENTS, 0)
           + NVL (od.OD_AMT, 0) >
           0
       AND mb.brnch_seq <> -1
       AND mb.crnt_rec_flg = 1
ORDER BY mb.brnch_nm
